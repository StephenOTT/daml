Classfile /home/nic/daml/tmp/xbc/Native$.class
  Last modified Jan 1, 2010; size 2372 bytes
  MD5 checksum 3acd74da6c6f61230d5d89f81a12e6bb
  Compiled from "Native.scala"
public final class xbc.Native$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // xbc/Native$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 7, attributes: 4
Constant pool:
    #1 = Utf8               xbc/Native$
    #2 = Class              #1            // xbc/Native$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Native.scala
    #6 = Utf8               xbc/Native$Down
    #7 = Class              #6            // xbc/Native$Down
    #8 = Utf8               xbc/Native
    #9 = Class              #8            // xbc/Native
   #10 = Utf8               Down
   #11 = Utf8               xbc/Native$K
   #12 = Class              #11           // xbc/Native$K
   #13 = Utf8               K
   #14 = Utf8               xbc/Native$KLeft
   #15 = Class              #14           // xbc/Native$KLeft
   #16 = Utf8               KLeft
   #17 = Utf8               xbc/Native$KRet$
   #18 = Class              #17           // xbc/Native$KRet$
   #19 = Utf8               KRet$
   #20 = Utf8               xbc/Native$KRight
   #21 = Class              #20           // xbc/Native$KRight
   #22 = Utf8               KRight
   #23 = Utf8               xbc/Native$Trav
   #24 = Class              #23           // xbc/Native$Trav
   #25 = Utf8               Trav
   #26 = Utf8               xbc/Native$Up
   #27 = Class              #26           // xbc/Native$Up
   #28 = Utf8               Up
   #29 = Utf8               MODULE$
   #30 = Utf8               Lxbc/Native$;
   #31 = Utf8               <clinit>
   #32 = Utf8               ()V
   #33 = Utf8               <init>
   #34 = NameAndType        #33:#32       // "<init>":()V
   #35 = Methodref          #2.#34        // xbc/Native$."<init>":()V
   #36 = NameAndType        #29:#30       // MODULE$:Lxbc/Native$;
   #37 = Fieldref           #2.#36        // xbc/Native$.MODULE$:Lxbc/Native$;
   #38 = Utf8               nfibRecurive
   #39 = Utf8               (J)J
   #40 = Utf8               n
   #41 = Long               2l
   #43 = NameAndType        #38:#39       // nfibRecurive:(J)J
   #44 = Methodref          #2.#43        // xbc/Native$.nfibRecurive:(J)J
   #45 = Utf8               this
   #46 = Utf8               J
   #47 = Utf8               nfibLoop
   #48 = Utf8               (Lxbc/Native$Trav;Lxbc/Native$K;)J
   #49 = Utf8               trav
   #50 = Utf8               k
   #51 = Utf8               ()J
   #52 = NameAndType        #40:#51       // n:()J
   #53 = Methodref          #7.#52        // xbc/Native$Down.n:()J
   #54 = Utf8               (J)V
   #55 = NameAndType        #33:#54       // "<init>":(J)V
   #56 = Methodref          #27.#55       // xbc/Native$Up."<init>":(J)V
   #57 = Methodref          #7.#55        // xbc/Native$Down."<init>":(J)V
   #58 = Utf8               (JLxbc/Native$K;)V
   #59 = NameAndType        #33:#58       // "<init>":(JLxbc/Native$K;)V
   #60 = Methodref          #15.#59       // xbc/Native$KLeft."<init>":(JLxbc/Native$K;)V
   #61 = Utf8               res
   #62 = NameAndType        #61:#51       // res:()J
   #63 = Methodref          #27.#62       // xbc/Native$Up.res:()J
   #64 = Utf8               Lxbc/Native$KRet$;
   #65 = NameAndType        #29:#64       // MODULE$:Lxbc/Native$KRet$;
   #66 = Fieldref           #18.#65       // xbc/Native$KRet$.MODULE$:Lxbc/Native$KRet$;
   #67 = Utf8               equals
   #68 = Utf8               (Ljava/lang/Object;)Z
   #69 = NameAndType        #67:#68       // equals:(Ljava/lang/Object;)Z
   #70 = Methodref          #4.#69        // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #71 = Methodref          #15.#52       // xbc/Native$KLeft.n:()J
   #72 = Utf8               ()Lxbc/Native$K;
   #73 = NameAndType        #50:#72       // k:()Lxbc/Native$K;
   #74 = Methodref          #15.#73       // xbc/Native$KLeft.k:()Lxbc/Native$K;
   #75 = Methodref          #21.#59       // xbc/Native$KRight."<init>":(JLxbc/Native$K;)V
   #76 = Utf8               v
   #77 = NameAndType        #76:#51       // v:()J
   #78 = Methodref          #21.#77       // xbc/Native$KRight.v:()J
   #79 = Methodref          #21.#73       // xbc/Native$KRight.k:()Lxbc/Native$K;
   #80 = Utf8               scala/MatchError
   #81 = Class              #80           // scala/MatchError
   #82 = Utf8               (Ljava/lang/Object;)V
   #83 = NameAndType        #33:#82       // "<init>":(Ljava/lang/Object;)V
   #84 = Methodref          #81.#83       // scala/MatchError."<init>":(Ljava/lang/Object;)V
   #85 = Utf8               Lxbc/Native$K;
   #86 = Utf8               resL
   #87 = Utf8               Lxbc/Native$Trav;
   #88 = Utf8               nfibStackSafe
   #89 = NameAndType        #47:#48       // nfibLoop:(Lxbc/Native$Trav;Lxbc/Native$K;)J
   #90 = Methodref          #2.#89        // xbc/Native$.nfibLoop:(Lxbc/Native$Trav;Lxbc/Native$K;)J
   #91 = Utf8               tripLoop
   #92 = Utf8               (JJJ)J
   #93 = Utf8               step
   #94 = Utf8               acc
   #95 = Utf8               i
   #96 = Utf8               trip
   #97 = Long               3l
   #99 = NameAndType        #91:#92       // tripLoop:(JJJ)J
  #100 = Methodref          #2.#99        // xbc/Native$.tripLoop:(JJJ)J
  #101 = Methodref          #4.#34        // java/lang/Object."<init>":()V
  #102 = Utf8               Code
  #103 = Utf8               LineNumberTable
  #104 = Utf8               StackMapTable
  #105 = Utf8               LocalVariableTable
  #106 = Utf8               MethodParameters
  #107 = Utf8               InnerClasses
  #108 = Utf8               SourceFile
  #109 = Utf8               ScalaInlineInfo
  #110 = Utf8               Scala
{
  public static final xbc.Native$ MODULE$;
    descriptor: Lxbc/Native$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class xbc/Native$
         3: dup
         4: invokespecial #35                 // Method "<init>":()V
         7: putstatic     #37                 // Field MODULE$:Lxbc/Native$;
        10: return
      LineNumberTable:
        line 7: 0

  public long nfibRecurive(long);
    descriptor: (J)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=3, args_size=2
         0: lload_1
         1: ldc2_w        #41                 // long 2l
         4: lcmp
         5: ifge          12
         8: lconst_1
         9: goto          31
        12: aload_0
        13: lload_1
        14: lconst_1
        15: lsub
        16: invokevirtual #44                 // Method nfibRecurive:(J)J
        19: aload_0
        20: lload_1
        21: ldc2_w        #41                 // long 2l
        24: lsub
        25: invokevirtual #44                 // Method nfibRecurive:(J)J
        28: ladd
        29: lconst_1
        30: ladd
        31: lreturn
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ long ]
      LineNumberTable:
        line 12: 0
        line 13: 8
        line 15: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lxbc/Native$;
            0      32     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public long nfibLoop(xbc.Native$Trav, xbc.Native$K);
    descriptor: (Lxbc/Native$Trav;Lxbc/Native$K;)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=24, args_size=3
         0: aload_1
         1: astore        8
         3: aload         8
         5: instanceof    #7                  // class xbc/Native$Down
         8: ifeq          74
        11: aload         8
        13: checkcast     #7                  // class xbc/Native$Down
        16: astore        9
        18: aload         9
        20: invokevirtual #53                 // Method xbc/Native$Down.n:()J
        23: lstore        10
        25: lload         10
        27: ldc2_w        #41                 // long 2l
        30: lcmp
        31: ifge          48
        34: new           #27                 // class xbc/Native$Up
        37: dup
        38: lconst_1
        39: invokespecial #56                 // Method xbc/Native$Up."<init>":(J)V
        42: aload_2
        43: astore_2
        44: astore_1
        45: goto          0
        48: new           #7                  // class xbc/Native$Down
        51: dup
        52: lload         10
        54: lconst_1
        55: lsub
        56: invokespecial #57                 // Method xbc/Native$Down."<init>":(J)V
        59: new           #15                 // class xbc/Native$KLeft
        62: dup
        63: lload         10
        65: aload_2
        66: invokespecial #60                 // Method xbc/Native$KLeft."<init>":(JLxbc/Native$K;)V
        69: astore_2
        70: astore_1
        71: goto          0
        74: goto          77
        77: aload         8
        79: instanceof    #27                 // class xbc/Native$Up
        82: ifeq          254
        85: aload         8
        87: checkcast     #27                 // class xbc/Native$Up
        90: astore        12
        92: aload         12
        94: invokevirtual #63                 // Method xbc/Native$Up.res:()J
        97: lstore        13
        99: aload_2
       100: astore        15
       102: getstatic     #66                 // Field xbc/Native$KRet$.MODULE$:Lxbc/Native$KRet$;
       105: aload         15
       107: invokevirtual #70                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       110: ifeq          120
       113: lload         13
       115: lstore        6
       117: goto          247
       120: goto          123
       123: aload         15
       125: instanceof    #15                 // class xbc/Native$KLeft
       128: ifeq          181
       131: aload         15
       133: checkcast     #15                 // class xbc/Native$KLeft
       136: astore        16
       138: aload         16
       140: invokevirtual #71                 // Method xbc/Native$KLeft.n:()J
       143: lstore        17
       145: aload         16
       147: invokevirtual #74                 // Method xbc/Native$KLeft.k:()Lxbc/Native$K;
       150: astore        19
       152: new           #7                  // class xbc/Native$Down
       155: dup
       156: lload         17
       158: ldc2_w        #41                 // long 2l
       161: lsub
       162: invokespecial #57                 // Method xbc/Native$Down."<init>":(J)V
       165: new           #21                 // class xbc/Native$KRight
       168: dup
       169: lload         13
       171: aload         19
       173: invokespecial #75                 // Method xbc/Native$KRight."<init>":(JLxbc/Native$K;)V
       176: astore_2
       177: astore_1
       178: goto          0
       181: goto          184
       184: aload         15
       186: instanceof    #21                 // class xbc/Native$KRight
       189: ifeq          234
       192: aload         15
       194: checkcast     #21                 // class xbc/Native$KRight
       197: astore        20
       199: aload         20
       201: invokevirtual #78                 // Method xbc/Native$KRight.v:()J
       204: lstore        21
       206: aload         20
       208: invokevirtual #79                 // Method xbc/Native$KRight.k:()Lxbc/Native$K;
       211: astore        23
       213: new           #27                 // class xbc/Native$Up
       216: dup
       217: lload         21
       219: lload         13
       221: ladd
       222: lconst_1
       223: ladd
       224: invokespecial #56                 // Method xbc/Native$Up."<init>":(J)V
       227: aload         23
       229: astore_2
       230: astore_1
       231: goto          0
       234: goto          237
       237: new           #81                 // class scala/MatchError
       240: dup
       241: aload         15
       243: invokespecial #84                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       246: athrow
       247: lload         6
       249: lstore        4
       251: goto          267
       254: goto          257
       257: new           #81                 // class scala/MatchError
       260: dup
       261: aload         8
       263: invokespecial #84                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       266: athrow
       267: lload         4
       269: lreturn
      StackMapTable: number_of_entries = 14
        frame_type = 0 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 47
          locals = [ class xbc/Native$, class xbc/Native$Trav, class xbc/Native$K, top, top, top, top, top, class xbc/Native$Trav, class xbc/Native$Down, long ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 25
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 42
          locals = [ class xbc/Native$, class xbc/Native$Trav, class xbc/Native$K, top, top, top, top, top, class xbc/Native$Trav, top, top, top, class xbc/Native$Up, long, class xbc/Native$K ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 57 /* same */
        frame_type = 2 /* same */
        frame_type = 49 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class xbc/Native$, class xbc/Native$Trav, class xbc/Native$K, top, top, top, long, class xbc/Native$Trav, top, top, top, class xbc/Native$Up, long, class xbc/Native$K ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class xbc/Native$, class xbc/Native$Trav, class xbc/Native$K, top, top, top, top, top, class xbc/Native$Trav ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class xbc/Native$, class xbc/Native$Trav, class xbc/Native$K, top, long, long, class xbc/Native$Trav, top, top, top, class xbc/Native$Up, long, class xbc/Native$K ]
          stack = []
      LineNumberTable:
        line 49: 0
        line 50: 3
        line 51: 25
        line 52: 34
        line 54: 48
        line 50: 74
        line 56: 77
        line 57: 99
        line 58: 102
        line 59: 123
        line 60: 184
        line 57: 237
        line 56: 254
        line 49: 257
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           25      49    10     n   J
          145      36    17     n   J
          152      29    19     k   Lxbc/Native$K;
          206      28    21  resL   J
          213      21    23     k   Lxbc/Native$K;
           99     155    13   res   J
            0     270     0  this   Lxbc/Native$;
            0     270     1  trav   Lxbc/Native$Trav;
            0     270     2     k   Lxbc/Native$K;
    MethodParameters:
      Name                           Flags
      trav                           final
      k                              final

  public long nfibStackSafe(long);
    descriptor: (J)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: aload_0
         1: new           #7                  // class xbc/Native$Down
         4: dup
         5: lload_1
         6: invokespecial #57                 // Method xbc/Native$Down."<init>":(J)V
         9: getstatic     #66                 // Field xbc/Native$KRet$.MODULE$:Lxbc/Native$KRet$;
        12: invokevirtual #90                 // Method nfibLoop:(Lxbc/Native$Trav;Lxbc/Native$K;)J
        15: lreturn
      LineNumberTable:
        line 66: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lxbc/Native$;
            0      16     1     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public long tripLoop(long, long, long);
    descriptor: (JJJ)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=7, args_size=4
         0: lload         5
         2: lconst_0
         3: lcmp
         4: ifne          11
         7: lload_3
         8: goto          26
        11: lload_1
        12: lload_3
        13: lload_1
        14: ladd
        15: lload         5
        17: lconst_1
        18: lsub
        19: lstore        5
        21: lstore_3
        22: lstore_1
        23: goto          0
        26: lreturn
      StackMapTable: number_of_entries = 3
        frame_type = 0 /* same */
        frame_type = 10 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ long ]
      LineNumberTable:
        line 72: 0
        line 74: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lxbc/Native$;
            0      27     1  step   J
            0      27     3   acc   J
            0      27     5     i   J
    MethodParameters:
      Name                           Flags
      step                           final
      acc                            final
      i                              final

  public long trip(long);
    descriptor: (J)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=5, args_size=2
         0: ldc2_w        #97                 // long 3l
         3: lstore_3
         4: aload_0
         5: lload_3
         6: lconst_0
         7: lload_1
         8: invokevirtual #100                // Method tripLoop:(JJJ)J
        11: lreturn
      LineNumberTable:
        line 80: 0
        line 81: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            4       7     3  step   J
            0      12     0  this   Lxbc/Native$;
            0      12     1     i   J
    MethodParameters:
      Name                           Flags
      i                              final

  private xbc.Native$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #101                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lxbc/Native$;
}
InnerClasses:
  public static #10= #7 of #9;            // Down=class xbc/Native$Down of class xbc/Native
  public static #13= #12 of #9;           // K=class xbc/Native$K of class xbc/Native
  public static #16= #15 of #9;           // KLeft=class xbc/Native$KLeft of class xbc/Native
  public static #19= #18 of #9;           // KRet$=class xbc/Native$KRet$ of class xbc/Native
  public static #22= #21 of #9;           // KRight=class xbc/Native$KRight of class xbc/Native
  public static #25= #24 of #9;           // Trav=class xbc/Native$Trav of class xbc/Native
  public static #28= #27 of #9;           // Up=class xbc/Native$Up of class xbc/Native
SourceFile: "Native.scala"
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 01 00 06 00 21 00 20 01 00 2F 00 30 01 00 26
   00 27 01 00 58 00 27 01 00 60 00 27 01 00 5B 00
   5C 01
  Scala: length = 0x0 (unknown attribute)

