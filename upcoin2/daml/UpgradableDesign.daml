-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module UpgradableDesign where

data CoinView = CoinView with
  issuer : Party
  owner : Party
    deriving (Eq,Show)

interface CoinI where
  _view : CoinView

  nonconsuming choice CoinI_Transfer : ContractId CoinI
    with
      rules : ContractId RulesI
      newOwner : Party
    controller [(_view this).owner, newOwner]
    do
      exercise rules RulesI_Transfer_Impl with
        coin = self
        view = _view this
        authority = signatory this ++ [newOwner]
        newOwner

  choice CoinI_Archive : ()
    controller (signatory this)
    do pure ()


interface RulesI where

  -- Core Transfer logic. The coin delegates back here.
  -- The collected authority is passed explicitly.
  nonconsuming choice RulesI_Transfer_Impl : (ContractId CoinI)
    with
      coin : ContractId CoinI
      view : CoinView
      authority : [Party]
      newOwner : Party
    controller authority
    do
      new <- create UnitCoinT with issuer = view.issuer, owner = newOwner
      exercise coin CoinI_Archive
      pure $ toInterfaceContractId new


template RulesT
  with
    admin : Party
    obs : [Party]
  where
    signatory [admin]
    observer obs

    implements RulesI

    -- The Mint entry point.
    nonconsuming choice RulesT_Mint : (ContractId CoinI)
      with issuer : Party
      controller [issuer]
      do
        new <- create UnitCoinT with issuer, owner = issuer
        pure $ toInterfaceContractId new

    -- The Transfer entry point. Delegates to the coin to collect (issuer) authority.
    nonconsuming choice RulesT_Transfer : (ContractId CoinI)
      with
        coin : ContractId CoinI
        owner : Party
        newOwner : Party
      controller [owner,newOwner]
      do exercise coin CoinI_Transfer with rules = toInterfaceContractId self, newOwner


template UnitCoinT
  with
    issuer : Party
    owner : Party
  where
    signatory [issuer,owner]

    implements CoinI where
      _view : CoinView =  CoinView with issuer, owner
